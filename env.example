# Example .env file for Bitwarden Backup with Multi-Remote Support

# =============================================================================
# BITWARDEN CREDENTIALS
# =============================================================================
BW_CLIENTID="your_bitwarden_client_id"
BW_CLIENTSECRET="your_bitwarden_client_secret"
BW_PASSWORD="your_bitwarden_master_password"

# =============================================================================
# BACKUP ENCRYPTION
# =============================================================================
# Strong password to encrypt backup files - CRITICAL: Do not lose this!
ENCRYPTION_PASSWORD="a_strong_unique_encryption_password"

# =============================================================================
# RCLONE CONFIGURATION (Multi-Remote Support)
# =============================================================================
# Provide your rclone configuration as base64 to avoid typing errors
#
# To generate RCLONE_CONFIG_BASE64:
# Method 1: From existing rclone config
#   RCLONE_CONFIG_BASE64=$(base64 -w 0 < ~/.config/rclone/rclone.conf)
#
# Method 2: From rclone config string
#   echo "your_rclone_config_content" | base64 -w 0
#
# The script will automatically detect ALL remotes in your config and backup to each one.
# You can include multiple remotes of different types (S3, Google Drive, Dropbox, etc.)

RCLONE_CONFIG_BASE64="your_base64_encoded_rclone_config_here"

# Example of what your decoded rclone config might look like:
# [s3-remote]
# type = s3
# provider = AWS
# access_key_id = your_aws_access_key
# secret_access_key = your_aws_secret_key
# region = us-east-1
#
# [gdrive-remote]
# type = drive
# client_id = your_google_client_id.apps.googleusercontent.com
# client_secret = your_google_client_secret
# token = {"access_token":"...","token_type":"Bearer"...}
#
# [r2-remote]
# type = s3
# provider = Cloudflare
# access_key_id = your_r2_access_key
# secret_access_key = your_r2_secret_key
# endpoint = https://your-account-id.r2.cloudflarestorage.com

# =============================================================================
# OPTIONAL BACKUP SETTINGS
# =============================================================================

# Remote backup path/bucket name (default: bitwarden-backup)
# This is the bucket name or folder path where backups will be stored on each remote
# For S3-compatible services: this becomes the bucket name
# For other services: this becomes the folder path
# BACKUP_PATH="my-backup-bucket"

# Temporary backup directory (default: /tmp/bw_backup)
# BACKUP_DIR="/path/to/your/temporary/storage"

# Minimum backup size check in bytes (default: 1024 bytes / 1KB)
# MIN_BACKUP_SIZE="100000"

# Gzip compression level 1-9 (default: 9 for maximum compression)
# COMPRESSION_LEVEL="9"

# Number of backups to keep on each remote (default: 240)
# This will be applied to ALL remotes in your configuration
# RETENTION_COUNT="180"

# Number of attempts to unlock the Bitwarden vault (default: 3)
# Helps handle transient network issues and API rate limiting
# BW_UNLOCK_RETRIES="3"

# Seconds to wait between vault unlock retry attempts (default: 5)
# BW_UNLOCK_RETRY_DELAY="5"

# PBKDF2 iterations for encryption (default: 600000)
# Higher values = more secure but slower encryption/decryption
# PBKDF2_ITERATIONS="600000"

# Bitwarden sync timeout in seconds (default: 60)
# Increase for slow networks, decrease for faster failure detection
# BITWARDEN_SYNC_TIMEOUT="60"

# Parallel processing settings (defaults: 3 remotes threshold, 4 max jobs)
# Adjust based on server resources and number of remotes
# PARALLEL_THRESHOLD="3"
# MAX_PARALLEL_JOBS="4"

# =============================================================================
# OPTIONAL NOTIFICATIONS (requires 'apprise' installed)
# =============================================================================
# Notification URLs separated by spaces
# Examples:
#   - Email: mailto://user:pass@example.com
#   - Telegram: tgram://token/chat_id
#   - Discord: discord://webhook_id/webhook_token
#   - Slack: slack://token_a/token_b/token_c
#
# APPRISE_URLS="mailto://user@example.com tgram://bot_token/chat_id"

# =============================================================================
# LEGACY VARIABLES (NO LONGER USED)
# =============================================================================
# These variables are no longer needed with the new multi-remote system:
# - RCLONE_R2_REMOTE_NAME
# - RCLONE_R2_BUCKET_NAME
# - RCLONE_R2_ENDPOINT
# - RCLONE_R2_ACCESS_KEY_ID
# - RCLONE_R2_SECRET_ACCESS_KEY
# - R2_RETENTION_COUNT
#
# Instead, configure all your remotes in the rclone config and provide it as base64.
