FROM debian:bookworm-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install all dependencies in a single RUN layer
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        gnupg \
        jq \
        python3 \
        python3-pip \
        unzip \
        wget && \
    # Install Node.js LTS (auto-detects arch, supports ARM/x86)
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs && \
    # Install Apprise using pip (with --break-system-packages for Debian 12)
    pip3 install apprise --break-system-packages && \
    # Install Bitwarden CLI via npm (works on all architectures)
    npm cache clean --force && \
    npm install -g semver && \
    npm install -g @bitwarden/cli && \
    # Install rclone (auto-detect architecture)
    curl https://rclone.org/install.sh | bash && \
    # Clean up apt cache and temporary files
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.npm && \
    # Create non-root user for security \
    groupadd -r apiuser && \
    useradd -r -g apiuser -s /bin/bash apiuser && \
    # Set up Bitwarden CLI config directory \
    mkdir -p /home/apiuser/.config/Bitwarden\ CLI && \
    chown -R apiuser:apiuser /home/apiuser/.config

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY api/requirements.txt /app/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --break-system-packages -r requirements.txt

# Copy the entire project
COPY . /app/

# Create necessary directories, make scripts executable, and set permissions
RUN mkdir -p /app/logs && \
    chmod +x /app/setup-rclone.sh /app/scripts/backup.sh /app/restore-backup.sh && \
    chown -R apiuser:apiuser /app

# Switch to non-root user
USER apiuser

# Expose the port
EXPOSE 5050

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5050/ || exit 1

# Command to run the application
CMD ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "5050", "--reload"]
